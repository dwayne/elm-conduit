#!/usr/bin/env bash

#
# Usage: [optimize_html=0*|1] [optimize_css=0*|1] [optimize_js=0*|1|2|3] [compress=0*|1] build
#

set -euo pipefail

optimize_html="${optimize_html:-0}"
optimize_css="${optimize_css:-0}"
optimize_js="${optimize_js:-0}"
compress="${compress:-0}"

src="${project:?}"
out="${build:?}/application"

clean () {
  rm -rf "$out"
}

prepare () {
  mkdir -p "$out"
}

build_images () {
  cp -r "$src/images" "$out/images"
}

build_html () {
  if [[ "$optimize_html" = 0 ]]; then
    cp "$src/html/"*.html "$out"
  else
    html-minifier                         \
      --collapse-boolean-attributes       \
      --collapse-inline-tag-whitespace    \
      --collapse-whitespace               \
      --decode-entities                   \
      --minify-js                         \
      --remove-comments                   \
      --remove-empty-attributes           \
      --remove-redundant-attributes       \
      --remove-script-type-attributes     \
      --remove-style-link-type-attributes \
      --remove-tag-whitespace             \
      --file-ext html                     \
      --input-dir "$src/html"             \
      --output-dir "$out"
  fi
}

build_css () {
  if [[ "$optimize_css" = 0 ]]; then
    sass --embed-sources "$src/sass/index.scss" "$out/index.css"
  else
    sass --style=compressed --no-source-map "$src/sass/index.scss" "$out/index.css"
  fi
}

build_js () {
  case "${optimize_js}" in
    1|2|3)
      func=build_js_optimize_"$optimize_js"
      ;;
    *)
      func=build_js_debug
      ;;
  esac

  "$func" "$src/src/Main.elm" "$out/app.js"
}

build_js_debug () {
  elm make "$1" --debug --output "$2"
}

build_js_optimize_1 () {
  elm make "$1" --optimize --output "$2"
  minify "$2"
}

build_js_optimize_2 () {
  elm-optimize-level-2 "$1" --output "$2"
  minify "$2"
}

build_js_optimize_3 () {
  elm-optimize-level-2 "$1" --optimize-speed --output "$2"
  minify "$2"
}

minify () {
  js="$1"
  min="${js%.js}.min.js"

  terser "$js" --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | terser --mangle --output "$min"
  mv "$min" "$js"
}

compress_assets () {
  if [[ "$compress" != 0 ]]; then
    cd "$out" && find . \( -name *.html -o -name *.css -o -name *.js \) -exec brotli "{}" \; -exec zopfli "{}" \;
  fi
}

clean && prepare && build_images && build_html && build_css && build_js && compress_assets
